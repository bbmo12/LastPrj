<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.last.prj.report.service.ReportMapper">

	<!-- qna 신고 접수 -->
	<insert id="newQnaReport"
		parameterType="com.last.prj.report.service.ReportVO">
		INSERT INTO REPORT (rep_no, reporter, w_date, content,
		q_no, reported, code)
		VALUES (r_seq.nextval, #{reporter}, sysdate,
		#{content}, #{q_no},
		#{reported}, #{code})
	</insert>


	<!-- 신고 유형 별 리스트 -->
	<select id="reportPartlist">
		SELECT * FROM REPORT
	</select>



	<!-- 신고전체 리스트 -->
	<select id="reportList"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT R.REP_NO, R.REPORTER,R.REPORTED, R.W_DATE,
		R.CONTENT, F.CONTENT AS F_CONTENT, r.rev_no, r.q_no
		FROM REPORT R,
		F_CODE F
		WHERE R.CODE = F.CODE
		ORDER BY R.REP_NO
	</select>

	<!-- 신고 전체 건수 -->
	<select id="reportCount" resultType="int">
		SELECT COUNT(*) FROM REPORT
	</select>


	<!-- review 신고 리스트 -->
	<select id="admReviewList"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT F.CONTENT AS F_CONTENT, R.REPORTER,
		R.REPORTED,RE.REV_NO,R.REP_NO,R.REPOR, R.W_DATE, R.CONTENT
		FROM REPORT
		R, F_CODE F, REVIEW RE
		WHERE R.CODE = F.CODE AND R.REV_NO = RE.REV_NO
	</select>

	<!-- qna 신고 리스트 -->
	<select id="admQnaList"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT F.CONTENT AS F_CONTENT, R.CONTENT, R.REPORTER,
		R.REPORTED, Q.Q_NO,R.W_DATE,R.REP_NO,R.REPOR
		FROM REPORT R, F_CODE F,
		QNA Q
		WHERE R.CODE = F.CODE AND R.Q_NO = Q.Q_NO

	</select>

	<!-- 신고 모달로 단건 조회 QnA -->
	<select id="admReportOneQna" parameterType="int"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT F.CONTENT AS F_CONTENT, R.REPORTER , R.REPORTED,
		R.REP_NO, R.W_DATE, R.REPOR, R.Q_NO,Q.CONTENT AS Q_CONTENT, R.CONTENT,
		R.STATE
		FROM REPORT R, F_CODE F, QNA Q
		WHERE R.CODE = F.CODE AND Q.Q_NO
		= R.Q_NO AND R.REP_NO = #{repno}
	</select>

	<!-- 신고 모달로 단건 조회 Review -->
	<select id="admReportOneReview" parameterType="int"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT F.CONTENT AS F_CONTENT, R.REPORTER , R.REPORTED ,
		R.REP_NO , R.W_DATE, R.REPOR, R.REV_NO, REV.CONTENT AS REV_CONTENT,
		R.CONTENT, R.STATE
		FROM REPORT R, F_CODE F, REVIEW REV
		WHERE R.CODE =
		F.CODE AND REV.REV_NO = R.REV_NO AND R.REP_NO = #{rep_no}
	</select>

	<!-- 신고 처리 -->
	<update id="admReportUpdate">
		UPDATE REPORT
		SET STATE = #{state}, REPOR = #{repor}
		WHERE REP_NO = #{rep_no}
	</update>


	<!-- 신고 유형에 따른 신고 및 건수 -->
	<select id="reportPartCount" parameterType="int"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT R.CODE AS CODE, F.CONTENT AS CONTENT, COUNT(F.CODE)
		AS COUNT
		FROM F_CODE F, REPORT R
		WHERE R.CODE=F.CODE AND F.CODE = {code}
		GROUP BY F.CODE,F.CONTENT,R.CODE
	</select>

	<!-- 일반회원 신고내역 전체조회 -->
	<select id="myReportList" parameterType="String"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT P.NAME AS p_name , R. CONTENT, R.W_DATE, C.CONTENT
		AS f_content
		FROM REPORT R, F_CODE C, P_MEMBER P
		WHERE R.CODE=C.CODE AND
		R.REPORTED=P.P_ID AND REPORTER = #{m_id}
	</select>

	<!-- 신고 날짜 별 검색 -->
	<select id="admReportDate" parameterType="String"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT R.REPORTER, R.REPORTED,R.W_DATE, R.CONTENT,
		F.CONTENT as f_content, R.REPOR
		FROM REPORT R , F_CODE F
		WHERE
		F.CODE=R.CODE AND R.W_DATE BETWEEN #{fromDate} AND #{toDate}
	</select>

	<!-- 파트너마이페이지 신고내역 -->
	<select id="pmemReport" resultType="int"
		parameterType="com.last.prj.report.service.ReportVO">
		SELECT COUNT(*) AS TOTAL
		FROM REPORT
		WHERE REPORTER =
		#{reporter}
	</select>

	<select id="pmemReportList"
		resultType="com.last.prj.report.service.ReportVO">
		SELECT *
		FROM ( SELECT ROWNUM RN, A.*
		FROM (SELECT W_DATE ,
		CONTENT, REPORTED, CODE, REPOR, STATE
		FROM REPORT
		WHERE REPORTER =
		#{reporter} ) A)
		WHERE RN BETWEEN (#{pageNum}-1)*#{amount}+1
		AND
		(#{pageNum})*#{amount}
	</select>


	<!--관리자 리뷰 리스트 페이징 처리된 유형 별 조회 -->
	<select id="admRlistCode"
		parameterType="com.last.prj.pmember.service.ReviewVO"
		resultType="com.last.prj.pmember.service.ReviewVO">
		SELECT B.* FROM ( SELECT A.* , ROWNUM RN FROM (SELECT F.CONTENT AS
		F_CONTENT, RE.CONTENT AS RE_CONTENT, R.REPORTER,
		R.REPORTED,RE.REV_NO,R.REP_NO,R.REPOR, R.W_DATE, R.CONTENT
		FROM REPORT
		R, F_CODE F, REVIEW RE
		WHERE R.CODE = F.CODE AND R.REV_NO = RE.REV_NO
		<if test="code != null ">
			AND R.CODE = #{code}
		</if>
		<if
			test="fromDate != null and fromDate != '' and toDate != null and toDate !='' ">
			AND R.W_DATE BETWEEN #{fromDate} AND #{toDate}
		</if>
		ORDER BY R.REV_NO ASC
<![CDATA[ 
        ) A)B WHERE RN BETWEEN (#{vo.pageNum}-1)*#{vo.amount}+1 AND (#{vo.pageNum})*#{vo.amount}
        ]]>
	</select>
	<select id="admRlistCodeCount"
		parameterType="com.last.prj.pmember.service.ReviewVO" resultType="int">
		SELECT COUNT(*)
		FROM REVIEW RE, REPORT R
		WHERE RE.REV_NO = R.REV_NO
			<if test="code != null">
				AND R.CODE = #{code}
			</if>
			<if
				test="fromDate != null and fromDate != '' and toDate != null and toDate !='' ">
				AND R.W_DATE BETWEEN #{fromDate} AND #{toDate}
			</if>
		
	</select>
	



</mapper>